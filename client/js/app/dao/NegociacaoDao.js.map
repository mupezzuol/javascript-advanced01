{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","e","onerror","console","log","target","error","cursor","openCursor","negociacoes","atual","result","dado","value","push","Negociacao","_data","_quantidade","_valor","continue","clear"],"mappings":";;;;;;IAAMA,a;AAEF,2BAAYC,UAAZ,EAAwB;AAAA;;AAEpB,aAAKC,WAAL,GAAmBD,UAAnB;AACA,aAAKE,MAAL,GAAc,aAAd;AACH;;;;iCAEQC,U,EAAY;AAAA;;AACjB,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAIC,UAAU,MACTN,WADS,CAETO,WAFS,CAEG,CAAC,MAAKN,MAAN,CAFH,EAEkB,WAFlB,EAGTO,WAHS,CAGG,MAAKP,MAHR,EAITQ,GAJS,CAILP,UAJK,CAAd;;AAMAI,wBAAQI,SAAR,GAAoB,UAACC,CAAD,EAAO;AACvBP;AACH,iBAFD;;AAIAE,wBAAQM,OAAR,GAAkB,aAAK;AACnBC,4BAAQC,GAAR,CAAYH,EAAEI,MAAF,CAASC,KAArB;AACAX,2BAAO,yCAAP;AACH,iBAHD;AAIH,aAfM,CAAP;AAgBH;;;qCAGY;AAAA;;AACT,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,oBAAIY,SAAS,OAAKjB,WAAL,CACRO,WADQ,CACI,CAAC,OAAKN,MAAN,CADJ,EACmB,WADnB,EAERO,WAFQ,CAEI,OAAKP,MAFT,EAGRiB,UAHQ,EAAb;;AAKA,oBAAIC,cAAc,EAAlB;AACAF,uBAAOP,SAAP,GAAmB,aAAK;AACpB,wBAAIU,QAAQT,EAAEI,MAAF,CAASM,MAArB;AACA,wBAAID,KAAJ,EAAW;AACP,4BAAIE,OAAOF,MAAMG,KAAjB;AACAJ,oCAAYK,IAAZ,CAAiB,IAAIC,UAAJ,CAAeH,KAAKI,KAApB,EAA2BJ,KAAKK,WAAhC,EAA6CL,KAAKM,MAAlD,CAAjB;AACAR,8BAAMS,QAAN;AACH,qBAJD,MAIO;AACHzB,gCAAQe,WAAR;AACH;AACJ,iBATD;;AAWAF,uBAAOL,OAAP,GAAiB,aAAK;AAClBC,4BAAQC,GAAR,CAAYH,EAAEI,MAAF,CAASC,KAArB;AACAX,2BAAO,wCAAP;AACH,iBAHD;AAIH,aAvBM,CAAP;AAwBH;;;qCAIY;AAAA;;AACT,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,oBAAIC,UAAU,OAAKN,WAAL,CACTO,WADS,CACG,CAAC,OAAKN,MAAN,CADH,EACkB,WADlB,EAETO,WAFS,CAEG,OAAKP,MAFR,EAGT6B,KAHS,EAAd;;AAKAxB,wBAAQI,SAAR,GAAoB;AAAA,2BAAKN,QAAQ,kCAAR,CAAL;AAAA,iBAApB;;AAEAE,wBAAQM,OAAR,GAAkB,aAAK;AACnBC,4BAAQC,GAAR,CAAYH,EAAEI,MAAF,CAASC,KAArB;AACAX,2BAAO,wCAAP;AACH,iBAHD;AAKH,aAdM,CAAP;AAeH","file":"NegociacaoDao.js","sourcesContent":["class NegociacaoDao {\n\n    constructor(connection) {\n\n        this._connection = connection;\n        this._store = 'negociacoes';\n    }\n\n    adiciona(negociacao) {\n        return new Promise((resolve, reject) => {\n            let request = this\n                ._connection\n                .transaction([this._store], \"readwrite\")\n                .objectStore(this._store)\n                .add(negociacao);\n\n            request.onsuccess = (e) => {\n                resolve();\n            };\n\n            request.onerror = e => {\n                console.log(e.target.error);\n                reject('Não foi possível adicionar a negociação');\n            };\n        });\n    }\n\n\n    listaTodos() {\n        return new Promise((resolve, reject) => {\n\n            let cursor = this._connection\n                .transaction([this._store], \"readwrite\")\n                .objectStore(this._store)\n                .openCursor();\n\n            let negociacoes = [];\n            cursor.onsuccess = e => {\n                let atual = e.target.result;\n                if (atual) {\n                    let dado = atual.value;\n                    negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\n                    atual.continue();\n                } else {\n                    resolve(negociacoes);\n                }\n            }\n\n            cursor.onerror = e => {\n                console.log(e.target.error);\n                reject('Não foi possível listar as negociações');\n            }\n        });\n    }\n\n\n\n    apagaTodos() {\n        return new Promise((resolve, reject) => {\n\n            let request = this._connection\n                .transaction([this._store], 'readwrite')\n                .objectStore(this._store)\n                .clear();\n\n            request.onsuccess = e => resolve('Negociações apagadas com sucesso');\n\n            request.onerror = e => {\n                console.log(e.target.error);\n                reject('Não foi possível apagar as negociações');\n            };\n\n        });\n    }\n\n\n}"]}